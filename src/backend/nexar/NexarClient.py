import os
from dotenv import load_dotenv, dotenv_values
import requests
import json
import base64

"""
-------------------------------------------------------------------------------
Program:    NexarClient.py
Author:     Patrick J. McGranahan
Date:       03.24.2025
Language:   python
Purpose:    The purpose of this code is to collect data from the Nexar API for 
            use in Price Scout.
-------------------------------------------------------------------------------
Change Log:
Who  When           What
PJM  03.25.2025     Finished the decodeJWT() method.
PJM  03.25.2025     Created the decodeJWT() method. Updated imports to include
                    base64.
PJM  03.24.2025     Finished the getToken() method. Added fields for urls and
                    updated constructor accordingly. The urls in the root .env
                    still need to be set.
PJM  03.24.2025     Created the getToken() method. Added relevant imports 
                    (requests, json). 
PJM  03.24.2025     Updated defualt constructor to initialize class variables
                    based on the root directory .env file. 
PJM  03.24.2025     Added imports related to accessing enviromental variables.
PJM  03.24.2025     Added fields required to access the Nexar API.
PJM  03.24.2025     Created NexarClient.py and added default constructor.
-------------------------------------------------------------------------------
"""
class NexarClient:
    # Data Fields

    # Stored in root directory .env
    _client_id = ""
    _client_secret = ""
    _username = ""
    _password = ""

    _nexar_url = ""
    _token_url = ""

    # Constructor
    def __init__(self):
        """
        Default Constructor. Loads enviromental variables from root directory
        and initializes class variables.
        """
        load_dotenv()
        self._client_id = os.getenv("NEXAR_CLIENT_ID")
        self._client_secret = os.getenv("NEXAR_CLIENT_SECRET")
        self._username = os.getenv("NEXAR_USERNAME")
        self._password = os.getenv("NEXAR_PASSWORD")

        self._nexar_url = os.getenv("NEXAR_URL")
        self._token_url = os.getenv("NEXAR_TOKEN_URL")
 
    # Getters

    # Setters

    # Methods
    def getToken(self):
        """
        Returns the Nexar token based on the client ID and secret provided.
        Returns:
            json: a json object with grant type, client id, client secret
        """
        token = {} # Return variable

        try:
            token = requests.post(
                url = self._nexar_url,
                data = {
                    "grant_type": "client credentials",
                    "client_id": self._client_id,
                    "client_secret": self._client_secret
                },
                allow_redirects=False
            ).json

        except:
            raise Exception("Failed to retrieve token data.")
        
        return token
    
    def decodeJWT(self, token):
        """
        Decodes the nexar token using base64 and utf-8 encodings/decodings.
        Args:
            token json: the nexar token generated by getToken()

        Returns:
            json: the decoded token
        """
        return json.loads(
            (base64.urlsafe_b64decode(token.split(".")[1] + "==")).decode("utf-8")
        )